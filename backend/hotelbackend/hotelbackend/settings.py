"""
Django settings for hotelbackend project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-gi@udp)k)f^*z^9e%1v4ibn+m3b2z^7g=f)iw&e27npjilx@b9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    '10.0.2.2', 
    '127.0.0.1', 
    'localhost',''
    '192.168.1.133'
    ]

CORS_ALLOW_ALL_ORIGINS = True
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'hotel.apps.HotelConfig',
    'booking.apps.BookingConfig',
    'cleaning.apps.CleaningConfig',
    'shifts.apps.ShiftsConfig',
    'incidents.apps.IncidentsConfig',
    'users.apps.UsersConfig',
    'rest_framework',
    'drf_yasg',
    'rest_framework_simplejwt',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware', 
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    

]

ROOT_URLCONF = 'hotelbackend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],  
        'APP_DIRS': True,  
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',  
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hotelbackend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
        'OPTIONS': {
            'timeout': 20,  # Таймаут в секундах
            'init_command': 'PRAGMA busy_timeout=30000;',  # 30 секунд
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ru-ru'
TIME_ZONE = 'Europe/Moscow'

DATETIME_FORMAT = '%d/%m/%Y %H:%M'
DATETIME_INPUT_FORMATS = ['%d/%m/%Y %H:%M']

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


AUTH_USER_MODEL = 'users.User'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.OrderingFilter',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',  
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination', 
    'PAGE_SIZE': 10,
    
}

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header',
            'description': 'JWT Authorization header using the Bearer scheme. Example: "Bearer <your_token>"',
        }
    },
     'USE_SESSION_AUTH': False,
}

SWAGGER_USE_COMPAT_RENDERERS = False

CORS_ALLOW_ALL_ORIGINS = True


LOGGING = {
    'version': 1, 
    'disable_existing_loggers': False, 
    'formatters': {
        'verbose': { 
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': { 
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': { 
            'class': 'logging.StreamHandler',
            'formatter': 'simple' if DEBUG else 'verbose', 
        },
        'file': { 
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'django_debug.log', 
            'formatter': 'verbose',
        },
        'mail_admins': { 
            'class': 'django.utils.log.AdminEmailHandler',
            'level': 'ERROR', 
            'formatter': 'verbose',
             
        },
    },
    'loggers': {
        'django': { 
            'handlers': ['console', 'file'], 
            'level': 'INFO', 
            'propagate': True, 
        },
        'django.request': { 
            'handlers': ['console',], 
            'level': 'ERROR',
            'propagate': False, 
        },
        'hotelbackend': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG', 
            'propagate': False,
        },
       
        'booking': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'cleaning': {
            'handlers': ['console',],
            'level': 'DEBUG',
            'propagate': False,
        },
        'hotel': {
            'handlers': ['console',],
            'level': 'DEBUG',
            'propagate': False,
        },
        'users': {
            'handlers': ['console',],
            'level': 'DEBUG',
            'propagate': False,
        },
       
    },

}

# ADMINS = [
#     ('Your Name', 'your_email@example.com'),
   
# ]

SIMPLE_JWT = {
    
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=12),      
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),         
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': False,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'AUTH_HEADER_TYPES': ('Bearer',),

   
}
